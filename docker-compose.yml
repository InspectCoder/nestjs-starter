version: '3.8'

services:
  postgres:
    image: postgres
    container_name: loc-postgres
    logging:
      driver: none
    environment:
      TZ: UTC
      POSTGRES_PASSWORD: postgres
    ports:
      - '5432:5432'

  mongo:
    image: mongo:5.0
    container_name: loc-mongo
    logging:
      driver: none
    environment:
      TZ: UTC
    ports:
      - '27017:27017'

  redis:
    image: redis:3-alpine
    container_name: loc-redis
    logging:
      driver: none
    environment:
      TZ: UTC
    ports:
      - '6379:6379'

  dev:
    container_name: nestjs_starter_dev
    image: nestjs-starter-dev:1.0.0
    env_file:
      - ./.env
    environment:
      - NODE_ENV=dev
      - IGNORE_ENV_FILE=false
    build:
      context: .
      target: development
      dockerfile: ./Dockerfile
    command: npm run start:dev
    ports:
      - 8080:8080
    networks:
      - nesjs-network
    volumes:
      - .:/usr/src/app
      - /usr/src/app/node_modules
    restart: unless-stopped

  prod:
    container_name: nestjs_starter_prod
    image: nestjs-starter-prod:1.0.0
    env_file:
      - ./.env.prod
    environment:
      - NODE_ENV=production
      - IGNORE_ENV_FILE=true
    build:
      context: .
      target: production
      dockerfile: ./Dockerfile
    command: npm run start:prod
    ports:
      - 8080:8080
    networks:
      - nesjs-network
    volumes:
      - .:/usr/src/app
      - /usr/src/app/node_modules
    restart: unless-stopped

networks:
  nesjs-network:
